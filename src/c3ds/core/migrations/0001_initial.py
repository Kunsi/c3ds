# Generated by Django 5.1.3 on 2024-12-10 14:54

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('title', models.CharField(blank=True, max_length=128, verbose_name='Title')),
                ('layout_mode', models.CharField(choices=[('normal', 'Normal'), ('cover', 'Cover'), ('fullscreen', 'Full Screen')], default='normal', max_length=32, verbose_name='Layout Mode')),
                ('last_changed', models.DateTimeField(auto_now=True, verbose_name='Last Changed')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'View',
                'verbose_name_plural': 'Views',
                'default_related_name': 'views',
            },
        ),
        migrations.CreateModel(
            name='MediaFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('filename', models.CharField(max_length=128, verbose_name='Filename')),
                ('file', models.FileField(upload_to='uploads/%Y/%m/%d/')),
                ('last_changed', models.DateTimeField(auto_now=True, verbose_name='Last Changed')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('last_changed', models.DateTimeField(auto_now=True, verbose_name='Last Changed')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
        ),
        migrations.CreateModel(
            name='HTMLView',
            fields=[
                ('baseview_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.baseview')),
                ('content', models.TextField(blank=True, verbose_name='HTML Content')),
                ('context', models.JSONField(blank=True, default=dict, help_text='Extra data passed to the context', null=True, verbose_name='context')),
                ('template_name_override', models.CharField(blank=True, max_length=128, null=True, verbose_name='Template Name')),
                ('vue_module_override', models.CharField(blank=True, max_length=128, null=True, verbose_name='Vue Module')),
            ],
            options={
                'verbose_name': 'HTML View',
                'verbose_name_plural': 'HTML Views',
                'default_related_name': 'html_views',
            },
            bases=('core.baseview',),
        ),
        migrations.CreateModel(
            name='IFrameView',
            fields=[
                ('baseview_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.baseview')),
                ('url', models.URLField(verbose_name='iframe URL')),
            ],
            options={
                'verbose_name': 'Iframe View',
                'verbose_name_plural': 'Iframe Views',
                'default_related_name': 'iframe_views',
            },
            bases=('core.baseview',),
        ),
        migrations.CreateModel(
            name='ImageFile',
            fields=[
                ('mediafile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.mediafile')),
                ('display_duration', models.PositiveIntegerField(default=6, help_text='Duration in seconds', verbose_name='Display Duration')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
            },
            bases=('core.mediafile',),
        ),
        migrations.CreateModel(
            name='VideoFile',
            fields=[
                ('mediafile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.mediafile')),
                ('loop', models.BooleanField(default=False, verbose_name='Loop Video')),
            ],
            options={
                'verbose_name': 'Video',
                'verbose_name_plural': 'Videos',
            },
            bases=('core.mediafile',),
        ),
        migrations.CreateModel(
            name='PlaylistEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(verbose_name='Order')),
                ('display_duration', models.PositiveIntegerField(blank=True, help_text="Overrides the display duration of an item. (seconds) \nIf the item is a video and it's not set to loop, this setting will be ignored.", null=True, verbose_name='Display Duration')),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='core.playlist', verbose_name='Playlist')),
                ('view', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='core.baseview', verbose_name='View')),
            ],
        ),
        migrations.AddField(
            model_name='playlist',
            name='views',
            field=models.ManyToManyField(related_name='playlists', through='core.PlaylistEntry', to='core.baseview', verbose_name='Views'),
        ),
        migrations.CreateModel(
            name='ImageView',
            fields=[
                ('baseview_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.baseview')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.imagefile', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Image View',
                'verbose_name_plural': 'Image Views',
                'default_related_name': 'image_views',
            },
            bases=('core.baseview',),
        ),
        migrations.CreateModel(
            name='Display',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Display Name')),
                ('slug', models.SlugField(unique=True, verbose_name='Display Slug')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Display UUID')),
                ('last_changed', models.DateTimeField(auto_now=True, verbose_name='Last Changed')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('static_view', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.baseview', verbose_name='Static View')),
                ('playlist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.playlist', verbose_name='Playlist')),
            ],
            options={
                'verbose_name': 'Display',
                'verbose_name_plural': 'Displays',
                'default_related_name': 'displays',
                'constraints': [models.CheckConstraint(condition=models.Q(('static_view__isnull', True), ('playlist__isnull', True), _connector='XOR'), name='static_view_or_playlist')],
            },
        ),
        migrations.CreateModel(
            name='VideoView',
            fields=[
                ('baseview_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.baseview')),
                ('video_url', models.URLField(blank=True, help_text='Can also be a hls or dash stream.', null=True, verbose_name='Video URL')),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.videofile', verbose_name='Video')),
            ],
            options={
                'verbose_name': 'Video View',
                'verbose_name_plural': 'Video Views',
                'default_related_name': 'video_views',
                'constraints': [models.CheckConstraint(condition=models.Q(('video__isnull', True), ('video_url__isnull', True), _connector='XOR'), name='video_file_or_video_url')],
            },
            bases=('core.baseview',),
        ),
    ]
